///////////////////////////////////////////////////////////
//                                                       //
//                 Joshua Van Leeuwen                    //
//                                                       //
//                University of Bristol                  //
//                                                       //
///////////////////////////////////////////////////////////

Q.1 Consider that instead of influencing data (e.g., the AES state), a
    fault might influence control-flow (e.g., a conditional statement)
    somehow during execution.  Stating any assumptions you make, give an
    alternative attack strategy based on this ability.

If an attacker had enough enough power to influence the number of rounds
that are performed during encryption by changing the results of the
conditional statements controlling the loop logic, then by reducing the
number of rounds to 0, key recovery becomes trivial. Even reducing the
number of rounds to less than 10 to 5 or 6 makes the scheme venerable to
a so called 'Boomerang Attack', outlined by Alex Biryukov's paper [1].

Effecting the control flow so that any various steps are not even
performed to the cipher text, i.e AddRoundKey, means that comparing the
faulted cipher text and the un-faulted cipher text will provide
information about the key.

-----------------------------------------------------------------------
Q.2 Outline the methods available for hardening this AES implementation
    against fault attacks; for each method, explain any assumptions you
    make and compare it with the others wrt.  metrics such as robustness,
    latency, and memory footprint.

One such method to prevent fault attacks is to implement fault detection
at the hardware level. This would involve implementing detectors for
each fault inducing method such as heat, clock glitching or power input
altering etc. This method's robustness will only be as effective as the
detectors implementation and could will suffer from malicious tampering
themselves however, would usually not effect latency greatly as they would be
ideally separate components of the AES hardware and would not effect
memory foot print greatly.

Another method to prevent fault attacks is to implement fault detection error
codes that use the data in the AES process to check if a fault has occurred.
These methods include using parity bit checking to verify data in the AES
process has not been faulted and will flag when this occurs [2][3]. These
countermeasures provide a very robust way to prevent the effectives of fault
attacks and make implementing an attack very difficult. This method does however
introduce a latency cost as more calculations are required as well as an
increase in memory footprint.

One final method would be to introduce randomness so that the attacker is
unable to predict the execution flow of the hardware at a given time,
preventing them from inducing a fault at the desired time. Although this
does not cost any greater memory footprint, the robustness of this
method is questionable, and subject to the attackers ability to predict
this randomness. This also greatly increases the latency of the AES
process.

-----------------------------------------------------------------------
Q.3 The question outlines one method to induce faults (i.e., via a clock
    glitch).  For the same attack target, construct a set of alternative
    methods and explain whether they seem applicable given the context.

Other methods that are available for inducting faults into hardware
systems are as follows:

Temperature; this method is very imprecise to where the fault is induced
    and so is not a suitable method for this fault attack.

Ion Beam; Although more precise than using temperature, requires a large
    amount of knowledge of the target hardware architecture.

Electromagnetic pulse; This method again requires some knowledge of the
    hardware of the machine and can also be less precise than the ion
    beam. This is not suitable for this attack.

Voltage Glitch; A voltage glitch such as under powering the machine when
    appropriate is by far the best alternative method as this is appropriate
    for this attack.

-----------------------------------------------------------------------
Q.4 For side-channel attacks, the number of acquisitions required can be
    used as a measure of efficiency.  Outline the equivalent measure for
    fault attacks, and explain whether (and why) you think a side-channel
    attack on AES could be as efficient as a fault attack based on these
    measures.

An equivalent efficiency measure would be the number of induced faults
needed to execute the attack. This fault attack can need as little as
one fault induced on the system to recover the key where as side-channel
attacks typically need a many number of acquisitions to perform their
attack. This means therefore, that one could argue that fault attacks
can be much more efficient than other side-channel attacks.

[1] The Boomerang Attack on 5 and 6-round Reduced AES*, Katholieke
    Universiteit Leuven, 2004
    https://link.springer.com/content/pdf/10.1007%2F3-540-48519-8_12.pdf

[2] Parity-Based Concurrent Error Detection of Substitution-Permutation
    Network Block Ciphers, Ramesh Karri, Grigori Kuznetsov, and Michael
    Goessel, Polytechnic University, Fault Tolerant Computing Group, 2003
    https://link.springer.com/content/pdf/10.1007%2F978-3-540-45238-6_10.pd

[3] A Parity Code Based Fault Detection for an Implementation of the
    Advanced Encryption Standard, Guido Bertoni, Luca Breveglieri, Israel
    Koren, Paolo Maistri, Vincenzo Piuri, Politecnico di Milano, University
    of Massachusetts, 2002
    https://pdfs.semanticscholar.org/a96d/bc11843cfe5881fd06f09eba056113c6e4dd.pdf
